{"version":3,"sources":["scripts/main.js"],"names":["everySquare","Array","from","document","querySelectorAll","everyRow","mainButton","querySelector","gameScore","canMoveInAnyDirection","score","DIRECTION","LEFT","RIGHT","UP","DONW","arrowDirection","appendNumber","emptySquares","filter","square","innerHTML","length","setCellValue","Math","floor","random","setColumn","filtered","map","cell","parseInt","value","className","getNewRow","column","direction","num","missing","unfilled","fill","DOWN","concat","checkMoveAndFinish","includes","checkIfGameFinished","iterationTD","list","i","filteredColumn","td","cellIndex","moveAndCombine","iterationTR","tr","rowIndex","cells","moveDown","moveUp","moveRight","moveLeft","newRow","canMove","move","combine","row","collection","k","prev","total","hasPairs","updateScore","j","emptyString","find","col","curr","push","isWon","classList","remove","gameOver","currCell","rightCell","bottomCell","isGameOver","restart","addEventListener","e","target","add","contains","key"],"mappings":"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","file":"main.41cc555b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst everySquare = Array.from(document.querySelectorAll('.field-cell'));\nconst everyRow = Array.from(document.querySelectorAll('.field-row'));\nconst mainButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nlet canMoveInAnyDirection = [];\nlet score = 0;\nconst DIRECTION = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  UP: 'up',\n  DONW: 'down',\n};\n\nconst arrowDirection = {\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  UP: 'ArrowUp',\n  DONW: 'ArrowDown',\n};\n\nfunction appendNumber() {\n  const emptySquares = everySquare.filter(square => square.innerHTML === '');\n\n  if (emptySquares.length === 0) {\n    return;\n  }\n\n  const index = Math.floor(Math.random() * emptySquares.length);\n  const randomSquare = emptySquares[index];\n  const value = Math.random() > 0.9 ? 4 : 2;\n\n  setCellValue(randomSquare, value);\n}\n\nfunction setColumn(filtered) {\n  return filtered.map(cell => parseInt(cell.innerHTML, 10) || '');\n}\n\nfunction setCellValue(cell, value) {\n  cell.innerHTML = value || '';\n  cell.className = 'field-cell' + (value ? ` field-cell--${value}` : '');\n}\n\nfunction getNewRow(column, direction) {\n  const filtered = column.filter(num => num);\n  const missing = 4 - filtered.length;\n  const unfilled = Array(missing).fill('');\n\n  return (\n    direction === DIRECTION.DOWN || direction === DIRECTION.RIGHT\n      ? unfilled.concat(filtered)\n      : filtered.concat(unfilled)\n  );\n}\n\nfunction checkMoveAndFinish() {\n  if (canMoveInAnyDirection.includes(true)) {\n    canMoveInAnyDirection = [];\n    appendNumber();\n  }\n\n  checkIfGameFinished();\n}\n\n// функція для заміни циклу в moveDown() та moveUp()\nfunction iterationTD(direction, list) {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = list.filter(td => td.cellIndex === i);\n\n    moveAndCombine(direction, filteredColumn);\n  }\n\n  checkMoveAndFinish();\n}\n\n// функція для заміни циклу в moveRight() та moveLeft()\nfunction iterationTR(direction, list) {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = list.filter(tr => tr.rowIndex === i)[0].cells;\n\n    moveAndCombine(direction, filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveDown() {\n  iterationTD(DIRECTION.DOWN, everySquare);\n}\n\nfunction moveUp() {\n  iterationTD(DIRECTION.UP, everySquare);\n}\n\nfunction moveRight() {\n  iterationTR(DIRECTION.RIGHT, everyRow);\n}\n\nfunction moveLeft() {\n  iterationTR(DIRECTION.LEFT, everyRow);\n}\n\nfunction moveAndCombine(direction, filteredColumn) {\n  const column = setColumn([...filteredColumn]);\n  const newRow = getNewRow(column, direction);\n\n  if (canMove(direction, column)) {\n    move(filteredColumn, newRow);\n    combine(direction, newRow, filteredColumn);\n  }\n}\n\nfunction combine(direction, row, collection) {\n  if (direction === DIRECTION.LEFT || direction === DIRECTION.UP) {\n    for (let k = 1; k < row.length; k++) {\n      const prev = row[k - 1];\n      const total = row[k] + prev;\n      const hasPairs = row[k] === prev\n         && prev !== ''\n         && row[k + 1] === row[k + 2]\n         && row[k + 1]\n         && row[k + 2];\n\n      if (hasPairs) {\n        row[k - 1] = total;\n        row[k] = row[k + 1] + row[k + 2];\n        row[k + 1] = '';\n        row[k + 2] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k - 1], total);\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k + 1], row[k + 1]);\n        setCellValue(collection[k + 2], row[k + 2]);\n\n        break;\n      }\n\n      if (row[k] === prev && row[k]) {\n        row[k - 1] = total;\n        row[k] = '';\n\n        updateScore(total);\n\n        setCellValue(collection[k - 1], total);\n        setCellValue(collection[k], row[k]);\n      }\n\n      if (row[k] && prev === '') {\n        row[k - 1] = row[k];\n        row[k] = '';\n\n        setCellValue(collection[k - 1], row[k - 1]);\n        setCellValue(collection[k], row[k]);\n      }\n    }\n  }\n\n  if (direction === DIRECTION.RIGHT || direction === DIRECTION.RIGHT) {\n    for (let k = row.length - 1; k > 0; k--) {\n      const prev = row[k - 1];\n      const total = row[k] + prev;\n      const hasPairs = row[k] === prev\n        && prev !== ''\n        && row[k - 2] === row[k - 3]\n        && row[k - 2]\n        && row[k - 3];\n\n      if (hasPairs) {\n        row[k] = total;\n        row[k - 1] = row[k - 2] + row[k - 3];\n        row[k - 2] = '';\n        row[k - 3] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - 1], row[k - 1]);\n        setCellValue(collection[k - 2], '');\n        setCellValue(collection[k - 3], '');\n\n        break;\n      }\n\n      if (row[k] === prev && prev) {\n        row[k - 1] = '';\n        row[k] = total;\n\n        updateScore(total);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - 1], '');\n      }\n\n      if (prev && row[k] === '') {\n        row[k] = row[k - 1];\n        row[k - 1] = '';\n\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k - 1], '');\n      }\n    }\n  }\n}\n\nfunction move(filteredColumn, row) {\n  for (let j = 0; j < filteredColumn.length; j++) {\n    setCellValue(filteredColumn[j], row[j]);\n  }\n}\n\nfunction canMove(direction, column) {\n  if (direction === DIRECTION.LEFT || direction === DIRECTION.UP) {\n    for (let j = 1; j < column.length; j++) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - 1];\n\n      if (prev === emptyString && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if (column[0] === '' && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n    }\n  }\n\n  if (direction === DIRECTION.DOWN || direction === DIRECTION.RIGHT) {\n    for (let j = column.length - 1; j > 0; j--) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - 1];\n\n      if (curr === emptyString && prev) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if (column[column.length - 1] === '' && curr) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        canMoveInAnyDirection.push(true);\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfGameFinished() {\n  const cells = Array.from(document.querySelectorAll('td'));\n  const isWon = cells.find(cell => cell.innerHTML.includes('2048'));\n\n  if (isWon) {\n    document.querySelector('.message-win').classList.remove('hidden');\n\n    return;\n  }\n\n  let gameOver = true;\n\n  for (let i = 0; i < cells.length; i++) {\n    const currCell = cells[i];\n    const rightCell = cells[i + 1];\n    const bottomCell = cells[i + 4];\n    const isGameOver = !currCell.innerHTML || (rightCell\n      && currCell.cellIndex !== 3 && currCell.innerHTML === rightCell.innerHTML)\n      || (bottomCell && currCell.innerHTML === bottomCell.innerHTML);\n\n    if (isGameOver) {\n      gameOver = false;\n      break;\n    }\n  }\n\n  if (gameOver) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction updateScore(value) {\n  score += value;\n  gameScore.innerHTML = score;\n}\n\nfunction restart() {\n  Array.from(document.querySelectorAll('td')).map(cell => {\n    setCellValue(cell, '');\n\n    return cell;\n  });\n\n  score = 0;\n\n  updateScore(score);\n  appendNumber();\n  appendNumber();\n}\n\nmainButton.addEventListener('click', (e) => {\n  const { target } = e;\n\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n\n  target.classList.remove('start');\n  target.classList.add('restart');\n  target.innerHTML = 'Restart';\n\n  if (target.classList.contains('restart')) {\n    restart();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.key) {\n    case arrowDirection.DONW:\n      moveDown();\n      break;\n\n    case arrowDirection.UP:\n      moveUp();\n      break;\n\n    case arrowDirection.RIGHT:\n      moveRight();\n      break;\n\n    case arrowDirection.LEFT:\n      moveLeft();\n      break;\n\n    default:\n      break;\n  }\n});\n"]}